{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAOC,SAASC,cAAc,SAC9BC,EAAaF,SAASC,cAAc,uBACpCE,EAAOH,SAASC,cAAc,sBAC9BG,EAASJ,SAASC,cAAc,wBAGtC,SAASI,EAAcC,EAAUC,GAW7B,OAVgB,IAAIC,SAAQ,CAACC,EAASC,KAClCC,YAAW,KACeC,KAAKC,SAAW,GAElCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAEhCA,EAAM,G,CAXIP,SAASC,cAAc,yBAgB/Ba,iBAAiB,SAE9B,SAAuBC,GACnBA,EAAIC,iBACJ,IAAK,IAAIC,EAAI,EAAGA,EAAIb,EAAOc,MAAOD,GAAK,EAAG,CAEtC,MAAME,EAAmBC,OAAOlB,EAAWgB,OACrCG,EAAaD,OAAOjB,EAAKe,OAE/Bb,EAAcY,EAAI,EAAIE,EAAmBF,EAAII,GAC5CC,MAAK,EAAChB,SAAEA,EAAQC,MAAEA,MACfgB,QAAQC,IAAI,uBAAqBlB,QAAiBC,OAC3CkB,EAAA5B,GAAS6B,OAAOC,QAAQ,uBAAqBrB,QAAiBC,UAExEqB,OAAM,EAACtB,SAAEA,EAAQC,MAAEA,MAChBgB,QAAQC,IAAI,sBAAoBlB,QAAiBC,OAC1CkB,EAAA5B,GAAS6B,OAAOG,QAAQ,sBAAoBvB,QAAeC,S,CAI1ER,EAAK+B,O","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst form = document.querySelector('.form');\nconst firstDelay = document.querySelector('input[name=\"delay\"]');\nconst step = document.querySelector('input[name=\"step\"]');\nconst amount = document.querySelector('input[name=\"amount\"]');\nconst createButton = document.querySelector('button[type=\"submit\"]');\n    \nfunction createPromise(position, delay) {\n    const promise = new Promise((resolve, reject) => {\n        setTimeout(() => {\n            const shouldResolve = Math.random() > 0.3;\n            if (shouldResolve) {\n                resolve({ position, delay });\n            } else {\n                reject({ position, delay });\n            }\n        }, delay);\n    });\n    return promise;\n};\n    \ncreateButton.addEventListener('click', handlerSubmit);\n\nfunction handlerSubmit(evt) {\n    evt.preventDefault();\n    for (let i = 0; i < amount.value; i += 1) {\n\n        const firstDelayNumber = Number(firstDelay.value);\n        const stepNumber = Number(step.value);\n        \n        createPromise(i + 1,( firstDelayNumber + i * stepNumber))\n        .then(({ position, delay }) => {\n            console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n            return Notiflix.Notify.success(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        })\n        .catch(({ position, delay }) => {\n            console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n            return Notiflix.Notify.failure(`❌ Rejected promise ${position} in ${delay}ms`);\n        });\n        \n    };\n    form.reset();\n}\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$form","document","querySelector","$ce04d3a99e08e73b$var$firstDelay","$ce04d3a99e08e73b$var$step","$ce04d3a99e08e73b$var$amount","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","evt","preventDefault","i","value","firstDelayNumber","Number","stepNumber","then","console","log","$parcel$interopDefault","Notify","success","catch","failure","reset"],"version":3,"file":"03-promises.483a128b.js.map"}